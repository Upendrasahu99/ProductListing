@model IEnumerable<ProductManagement.Models.ProductModel>

@{
    ViewData["Title"] = "ProductList";
}

<link href="d:\cs\project\taskproject\productlisting\productmanagement\wwwroot\css\productlist.css" rel="stylesheet" />
<link href="~/css/productlist.css" rel="stylesheet" />

<h1>ProductList</h1>

<p class="Add">
    <a asp-action="AddUpdate" class="fa fa-plus" style="font-size:25px;"></a>
</p>
@* @using (Html.BeginForm())
{
    <p class="search_Bar">
        Find by keyword: @Html.TextBox("keyword")
        <input type="submit" value="search" />
    </p>
} *@
<table id="myTable" class="table table-striped">
    <thead class="thead-dark">
        <tr>
@*             <th>
                @Html.DisplayNameFor(model => model.ProductID)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpiryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr class="table_row">
@*                 <td >
                @Html.DisplayFor(modelItem => item.ProductID)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    @item.ExpiryDate.ToString("yyyy-mm-dd") @* only show date not time *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductImage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @item.CreationDate.ToString("yyyy-mm-dd") @* only show date not time *@
            </td>
            <td>
                    @Html.ActionLink("", "AddUpdate", new {  code=item.Code  }, new { @class="fa fa-edit", style="color:grey"})
                    @Html.ActionLink("", "Delete", new {  id=item.ProductID  },  new { onclick = "return ConfirmDelete(this);" , @class = "fa fa-trash-o", style="color:#e20b0b" })
                    
            </td>
        </tr>
}
    </tbody>
</table>

<script>
    var object = { status: false, ele: null };
    function ConfirmDelete(ev){
        if (object.status) {
            return true;
        };
        swal({
            title: "Are you sure?",
            text: "Your will not be able to recover this file!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: true
        },
            function () {
                object.status = true;
                object.ele = ev;
                object.ele.click();
            });
        return false;
    }
</script>


